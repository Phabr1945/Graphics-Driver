#    Graphics-Driver: A graphics driver made by an idiot for an idiot.
#    Copyright (C) <2024>  <Ryan Britton Maxson, Phbar1945, Райан Махъссон>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
from turtle import *
from _3D_to_2D_ import _2d_
import time
_2d_()
def _plus_():
    forward(1)
    left(180)
    forward(1)
    left(90)
    forward(1)
    left(180)
    forward(1)
    left(90)
    forward(1)
    left(180)
    forward(1)
    left(90)
    forward(1)
    left(180)
    forward(1)
    left(180)
def _display_with_turtle_():
    def _point1_():
        x = 10 * float(_2d_.dat1["x1"])
        y = 10 * float(_2d_.dat1["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point2_():
        x = 10 * float(_2d_.dat2["x1"])
        y = 10 * float(_2d_.dat2["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point3_():
        x = 10 * float(_2d_.dat3["x1"])
        y = 10 * float(_2d_.dat3["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point4_():
        x = 10 * float(_2d_.dat4["x1"])
        y = 10 * float(_2d_.dat4["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point5_():
        x = 10 * float(_2d_.dat5["x1"])
        y = 10 * float(_2d_.dat5["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point6_():
        x = 10 * float(_2d_.dat6["x1"])
        y = 10 * float(_2d_.dat6["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point7_():
        x = 10 * float(_2d_.dat7["x1"])
        y = 10 * float(_2d_.dat7["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point8_():
        x = 10 * float(_2d_.dat8["x1"])
        y = 10 * float(_2d_.dat8["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point9_():
        x = 10 * float(_2d_.dat9["x1"])
        y = 10 * float(_2d_.dat9["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point10_():
        x = 10 * float(_2d_.dat10["x1"])
        y = 10 * float(_2d_.dat10["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point11_():
        x = 10 * float(_2d_.dat11["x1"])
        y = 10 * float(_2d_.dat11["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point12_():
        x = 10 * float(_2d_.dat12["x1"])
        y = 10 * float(_2d_.dat12["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point13_():
        x = 10 * float(_2d_.dat13["x1"])
        y = 10 * float(_2d_.dat13["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point14_():
        x = 10 * float(_2d_.dat14["x1"])
        y = 10 * float(_2d_.dat14["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point15_():
        x = 10 * float(_2d_.dat15["x1"])
        y = 10 * float(_2d_.dat15["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    def _point16_():
        x = 10 * float(_2d_.dat16["x1"])
        y = 10 * float(_2d_.dat16["y1"])
        up()
        left(90)
        forward(x)
        right(90)
        forward(y)
        down()
        _plus_()
        up()
        home()
        left(90)
    _point1_()
    _point2_()
    _point3_()
    _point4_()
    _point5_()
    _point6_()
    _point7_()
    _point8_()
    _point9_()
    _point10_()
    _point11_()
    _point12_()
    _point13_()
    _point14_()
    _point15_()
    _point16_()
def _disp_startup_():
    forward(10)
    left(180)
    forward(10)
    left(90)
    forward(10)
    left(180)
    forward(10)
    left(90)
    forward(10)
    left(180)
    forward(10)
    left(90)
    forward(10)
    left(180)
    forward(10)
    left(180)
def _tot_disp_():
    print()
    _disp_startup_()
    _display_with_turtle_()
_tot_disp_()